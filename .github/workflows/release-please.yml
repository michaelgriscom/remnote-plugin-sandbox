on:
  push:
    branches:
    - main

permissions:
  contents: write
  pull-requests: write

name: release-please

jobs:
  release-please:
    runs-on: ubuntu-latest
    steps:
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.MY_RELEASE_PLEASE_TOKEN }}
          config-file: release-please-config.json
          manifest-file: .release-please-manifest.json
      - name: Check out PR
        uses: actions/checkout@v4
        if: ${{ steps.release.outputs.pr }}
        with:
          ref: ${{ steps.release.outputs.pr.headBranchName }}
          fetch-depth: 0
      # Update the manifest
      - name: Update Manifest
        if: ${{ steps.release.outputs.pr }}
        run: |
            # Debugging step to confirm files exist
            git config user.name github-actions[bot]
            git config user.email github-actions[bot]@users.noreply.github.com
          
            git switch release-please--branches--main--components--remnote-plugin-template-react

            # Extract version from package.json
            version=$(jq -r .version package.json)
            major=$(echo $version | cut -d. -f1)
            minor=$(echo $version | cut -d. -f2)
            patch=$(echo $version | cut -d. -f3)
        
            # Update manifest
            jq ".version.major = $major | .version.minor = $minor | .version.patch = $patch" public/manifest.json > manifest_tmp.json
            mv manifest_tmp.json public/manifest.json
        
            # Commit and push
            git add public/manifest.json
            git commit -m "chore: Update manifest version"
            git push
      - name: Check out code
        if: ${{ steps.release.outputs.release_created }}
        uses: actions/checkout@v4
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
      - name: Install Dependencies
        if: ${{ steps.release.outputs.release_created }}
        run: npm ci
      - name: Build the Project
        if: ${{ steps.release.outputs.release_created }}
        run: npm run build
      - name: Upload Release
        if: ${{ steps.release.outputs.release_created }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release upload ${{ steps.release.outputs.tag_name }} ./PluginZip.zip
