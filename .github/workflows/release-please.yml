on:
  push:
    branches:
    - main

permissions:
  contents: write
  pull-requests: write

name: release-please

jobs:
  release-please:
    runs-on: ubuntu-latest
    steps:
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.MY_RELEASE_PLEASE_TOKEN }}
          config-file: release-please-config.json
          manifest-file: .release-please-manifest.json
      - uses: actions/checkout@v4
        if: ${{ steps.release.outputs.prs_created }}
        with:
          ref: ${{ fromJson(steps.release.outputs.pr).head.ref }}
          fetch-depth: 0
      # Update the manifest
      - name: Update Manifest
        if: ${{ steps.release.outputs.prs_created }}
        run: |
            # Debugging step to confirm files exist
            echo "Current directory contents:"
            ls -la
        
            git switch release-please--branches--main--components--remnote-plugin-template-react

            # Extract version from package.json
            version=$(jq -r .version package.json)
            major=$(echo $version | cut -d. -f1)
            minor=$(echo $version | cut -d. -f2)
            patch=$(echo $version | cut -d. -f3)
        
            # Update manifest
            jq ".version.major = $major | .version.minor = $minor | .version.patch = $patch" manifest.json > manifest_tmp.json
            mv manifest_tmp.json manifest.json
        
            # Commit and push
            git add manifest.json
            git commit -m "chore: Update manifest version"
            git push
    #   - name: Upload Release Artifact
    #     if: ${{ steps.release.outputs.release_created }}
    #   - run: npm ci
    #     if: ${{ steps.release.outputs.release_created }}
    #   - run: npm run build
    #     env:
    #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #     if: ${{ steps.release.outputs.release_created }}
    #     run: gh release upload ${{ steps.release.outputs.tag_name }} ./PluginZip.zip
